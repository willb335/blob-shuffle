{"version":3,"sources":["data.ts","Blob.tsx","Shuffle.tsx","useMedia.ts","useMeasure.ts","serviceWorker.ts","styles/index.ts","index.tsx"],"names":["createBlob","height","seed","blob","extraPoints","randomness","size","randomIntFromInterval","min","max","Math","floor","random","createBlobs","columns","amount","blobSize","Array","from","map","_","i","fill","j","key","Date","now","toString","path","flat","Svg","styled","svg","props","isCurrentItem","Blob","handleClick","item","width","d","onClick","List","div","Shuffle","useState","currentItem","setCurrentItem","match","setMatch","queries","values","defaultValue","findIndex","q","matchMedia","matches","value","setValue","useEffect","handler","window","addEventListener","removeEventListener","useMedia","items","setItems","ref","useRef","left","top","bounds","setBounds","ResizeObserver","entry","contentRect","ro","observe","current","disconnect","useMeasure","bind","setInterval","shuffle","length","heights","gridItems","child","column","indexOf","xy","transitions","useTransition","opacity","enter","update","leave","config","mass","tension","friction","trail","handleItemClick","prev","filter","curItem","style","console","log","m","transform","interpolate","x","y","Boolean","location","hostname","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ec93d716.chunk.js","sourcesContent":["import * as blob from 'blobs/v2';\n\nexport interface BlobData {\n  path: string;\n  height: number;\n  fill: string;\n  key: string;\n}\n\nconst createBlob = (height: number, seed: number): string => {\n  return blob.svgPath({\n    seed,\n    extraPoints: 8,\n    randomness: 4,\n    size: height / 2,\n  });\n};\n\nconst randomIntFromInterval = (min: number, max: number): number => {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport const createBlobs = (columns: number, amount: number): BlobData[] => {\n  const blobSize = (): [number, number] => {\n    switch (columns) {\n      case 3:\n        return [200, 500];\n      case 4:\n        return [250, 600];\n      case 5:\n        return [400, 1000];\n      default:\n        return [100, 250];\n    }\n  };\n\n  const twins = Array.from(Array(amount)).map((_, i) => {\n    const height = randomIntFromInterval(blobSize()[0], blobSize()[1]);\n    const fills = [\n      '#FF0066',\n      '#8A3FFC',\n      '#FA4D56',\n      '#F1C21B',\n      '#08BDBA',\n      '#0F62FE',\n      '#24A148',\n    ];\n    const seed = Math.random();\n    const fill = fills[randomIntFromInterval(0, 6)];\n\n    return Array.from(Array(2)).map((_, j) => {\n      return {\n        key: Date.now().toString() + j + i,\n        path: createBlob(height, seed),\n        height: height,\n        fill,\n      };\n    });\n  });\n\n  return twins.flat();\n};\n","import React, { FunctionComponent } from 'react';\nimport styled from 'styled-components';\n\nimport { Item } from './Shuffle';\n\nconst Svg = styled.svg<{ isCurrentItem: boolean; fill: string }>`\n  /* box-shadow: 0px 10px 50px -10px rgba(0, 0, 0, 0.2); */\n  border-radius: 100%;\n  background-color: ${(props) =>\n    props.isCurrentItem ? `${props.fill}` : 'none'};\n`;\n\nexport interface BlobProps {\n  size: number;\n  path: string;\n  fill: string;\n  handleClick: Function;\n  item: Item;\n  isCurrentItem: boolean;\n}\n\nexport const Blob: FunctionComponent<BlobProps> = ({\n  size,\n  path,\n  fill,\n  handleClick,\n  item,\n  isCurrentItem,\n}) => {\n  return (\n    <Svg width={size} height={size} isCurrentItem={isCurrentItem} fill={fill}>\n      <path d={path} fill={fill} onClick={() => handleClick(item)} />\n    </Svg>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useTransition, animated } from 'react-spring';\nimport shuffle from 'lodash.shuffle';\nimport styled from 'styled-components';\n\nimport { useMeasure } from './useMeasure';\nimport { useMedia } from './useMedia';\nimport { createBlobs, BlobData } from './data';\nimport { Blob } from './Blob';\n\ntype XY = [number, number];\n\nexport interface Item {\n  key: string;\n  path: string;\n  height: number;\n  width: number;\n  fill: string;\n  xy: XY;\n}\n\nconst List = styled.div`\n  position: relative;\n  font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir,\n    helvetica neue, helvetica, ubuntu, roboto, noto, segoe ui, arial, sans-serif;\n  width: 100%;\n  height: 100%;\n\n  & > div {\n    position: absolute;\n    will-change: transform, width, height, opacity;\n    padding: 15px;\n  }\n`;\n\nexport function Shuffle() {\n  const [currentItem, setCurrentItem] = useState<Item | null>(null);\n  const [match, setMatch] = useState<Item[]>([]);\n  // Tie media queries to the number of columns\n  const columns = useMedia(\n    ['(min-width: 1500px)', '(min-width: 1000px)', '(min-width: 600px)'],\n    [12, 10, 6],\n    2\n  );\n  const [items, setItems] = useState(createBlobs(columns, 30));\n  // Measure the width of the container element\n  const [bind, bounds] = useMeasure();\n\n  useEffect(() => {\n    void setInterval(() => setItems(shuffle), 3500);\n  }, []);\n\n  useEffect(() => {\n    if (items.length === 0) {\n      setItems(createBlobs(columns, 10));\n    }\n  }, [columns, items]);\n\n  // Form a grid of stacked items\n  let heights = new Array(columns).fill(0); // Each column gets a height starting with zero\n  let gridItems: Item[] = items.map((child, i) => {\n    const column = heights.indexOf(Math.min(...heights)); // Basic masonry-grid placing, puts tile into the smallest column using Math.min\n    const xy: XY = [\n      (bounds.width / columns) * column,\n      (heights[column] += child.height / 2 + (i < columns ? 0 : 30)) -\n        child.height / 2,\n    ]; // X = container width / number of columns * column index, Y = it's just the height of the current column\n    return {\n      ...child,\n      xy,\n      width: bounds.width / columns,\n      height: child.height / 2,\n    };\n  });\n  // Turn the static grid values into animated transitions, any addition, removal or change will be animated\n  const transitions = useTransition(gridItems, (item: BlobData) => item.key, {\n    from: ({ xy, width, height }) => ({ xy, width, height, opacity: 0 }),\n    enter: ({ xy, width, height }) => ({ xy, width, height, opacity: 1 }),\n    update: ({ xy, width, height }) => ({ xy, width, height }),\n    leave: { height: 0, opacity: 0 },\n    config: { mass: 5, tension: 500, friction: 100 },\n    trail: 25,\n  });\n\n  function handleItemClick(item: Item): void {\n    if (item.path === currentItem?.path && item.key !== currentItem.key) {\n      setItems((prev) => prev.filter((curItem) => item.path !== curItem.path));\n      setMatch([currentItem, item]);\n    }\n    setCurrentItem(item);\n  }\n  // Render the grid\n  return (\n    <List {...bind} style={{ height: Math.max(...heights) }}>\n      {transitions.map(({ item, props: { xy, height, width }, key }: any) => {\n        console.log('key', key);\n        const isMatched: boolean =\n          match.filter((m) => m.key === item.key).length > 0;\n        return (\n          !isMatched && (\n            <animated.div\n              key={key.toString()}\n              style={{\n                transform: xy.interpolate(\n                  (x: number, y: number) => `translate3d(${x}px,${y}px,0)`\n                ),\n                height: height + 30,\n                width,\n              }}\n            >\n              <Blob\n                isCurrentItem={item.key === currentItem?.key}\n                handleClick={handleItemClick}\n                fill={item.fill}\n                size={item.height}\n                path={item.path}\n                item={item}\n              />\n            </animated.div>\n          )\n        );\n      })}\n    </List>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nexport function useMedia(\n  queries: string[],\n  values: number[],\n  defaultValue: number\n): number {\n  const match = (): number =>\n    values[queries.findIndex((q) => matchMedia(q).matches)] || defaultValue;\n  const [value, setValue] = useState(match);\n  useEffect(() => {\n    const handler = () => setValue(match);\n    window.addEventListener('resize', handler);\n    return () => window.removeEventListener('resize', handler);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return value;\n}\n","import { useRef, useState, useEffect } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nexport interface Bounds {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n}\n\nexport function useMeasure(): [\n  { ref: React.MutableRefObject<HTMLDivElement> },\n  Bounds\n] {\n  const ref = useRef() as React.MutableRefObject<HTMLDivElement>;\n  const [bounds, setBounds] = useState<Bounds>({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0,\n  });\n  const [ro] = useState(\n    () => new ResizeObserver(([entry]) => setBounds(entry.contentRect))\n  );\n  useEffect(() => {\n    ro.observe(ref.current);\n    return ro.disconnect;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return [{ ref }, bounds];\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n /*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\n* {\n  box-sizing: border-box;\n}\n\n\nhtml,\nbody,\n#root {\n  margin: 0;\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n  user-select: none;\n}\n\n#root {\n  overflow: auto;\n  display: flex;\n  justify-content: center;\n  background: #f0f0f0;\n  padding: 15px;\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Render the main element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on h1 elements within section and\n * article contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd em font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd em font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent sub and sup elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from fieldset elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    fieldset elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to inherit in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Shuffle } from './Shuffle';\nimport * as serviceWorker from './serviceWorker';\n\nimport { GlobalStyle } from './styles';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <Shuffle />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}